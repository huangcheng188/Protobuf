syntax = "proto3";

//option java_package = "com.inmo.app.module_go3device";
//option java_outer_classname = "MessageStateProto";

message MessageState{

  Synchronous  synch = 1;              //同步操作

  UserData user_details = 2;           //用户详情

  oneof Status {
    BLE_BT_Status blue_tooch = 3;
    WifiData      wifi_data  = 4;
    WifiControl   wifi_control  = 5;
    UnsyncedFileListRequest unsyncedFileListRequest = 6; //Synchronous 为QUERY_SYNCH时 使用
  }
}


//wifi同步文件步骤
// 1 app先调UnsyncedFileListRequest发送请求给眼镜
// 2 眼镜返回WifiData 里面包含文件列表FileInfo
// 3 app拿着wifidata的ssid pwd开启wifi  开启socket
// 4 app拿着FileInfo中的文件路径 通过socket下载对应的文件

// 查询未同步的文件列表
message UnsyncedFileListRequest {
  FileModuleType module_type = 1; // 模块类型
}

// 文件模块类型
enum FileModuleType {
  QUERY_IMAGE_DATA        = 0;           // 查询图片数据
  QUERY_VIDEO_DATA        = 1;           // 查询视频数据
  QUERY_SPEED_NOTE_DATA   = 2;           // 查询速记数据
  QUERY_SUPER_RECORD_DATA = 3;           // 查询超能录音数据
  QUERY_ALL_DATA          = 4;           // 查询全部数据
}

// 眼镜返回文件列表
message WifiData {
  string   ssid             = 1;  // WiFi名称
  string   pwd              = 2;  // WiFi密码
  uint32   total_count      = 3;  // 总个数
  repeated FileInfo files   = 4;  // 文件列表
}

// 手机操控眼镜wifi状态
message WifiControl{
   WifiStatus  wifi_status = 1;
}

enum WifiStatus {
    WIFI_OPEN_STATUS = 0;            //打开wifi
    WIFI_CLOSE_STATUS = 1;           //关闭wifi
}

// 文件信息
message FileInfo {
  FileModuleType file_module_type = 1;  // 文件所属的模块类型
  uint32         file_type        = 2;  // 0:图片  1:视频  2:视频的imu 3:opus音频
  string         file_name        = 3;  // 文件名    xxx.jpg   xxx.opus
  string         file_path        = 4;  // 文件路径  /sdcard/xxx.jpg /sdcard/xxx.opus
  uint64         file_size        = 5;  // 文件字节大小
}

//蓝牙状态同步
enum StatusBind {
  APP_TO_GLASS_ONLY_BLE_OK = 0;            //app连接眼镜只有ble可以
  APP_TO_GLASS_ONLY_BT_OK = 1;             //app连接眼镜只有bt可以
  APP_TO_GLASS_BT_AND_BLE_OK = 2;          //app连接眼镜ble和bt都可以
  APP_REQUEST_BLE = 3;                     //app请求连接眼镜ble
  APP_REQUEST_BT = 4;                      //app请求连接眼镜bt
  GLASS_REQUEST_BLE = 5;                   //眼镜请求连接app的ble
  GLASS_REQUEST_BT = 6;                    //眼镜请求连接app的bt
  APP_REQUEST_UNBIND = 7;                  //app请求解绑眼镜
  GLASS_REQUEST_UNBIND = 8;                //眼镜请求解绑app
  BLUETOOTH_DISCONN = 9;                   //蓝牙断链
  SUCCESSS_CONN = 10;                      //连接成功
  SUCCESSS_BIND = 11;                      //绑定成功
  SUCCESSS_UNBIND = 12;                    //解绑成功
}

message UserData {
  uint32 UserID = 1;                   //用户ID
}

message BLE_BT_Status {
  bool glass_bind  = 1;                //眼镜已绑定
  bool Phone_bind  = 2;                //手机已绑定
  bool link_type  = 3;                 //连接状态
  StatusBind  statustype = 4;          //绑定状态
}

enum Synchronous {
  START_SYNCH   = 0;
  STOP_SYNCH    = 1;
  RESTART_SYNCH = 2;
  NOT_PERFORM   = 3;
  QUERY_SYNCH   = 4;
}